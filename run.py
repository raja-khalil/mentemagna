#!/usr/bin/env python3
"""
Mente Magna - Servidor Principal 
PROBLEMA DO BANCO CORRIGIDO
"""

import os
import sys
from flask import Flask, render_template

# Carregar vari√°veis de ambiente
try:
    from dotenv import load_dotenv
    load_dotenv()
    print("‚úÖ Arquivo .env carregado")
except ImportError:
    print("‚ö†Ô∏è python-dotenv n√£o encontrado")

def create_app():
    """Cria e configura a aplica√ß√£o Flask"""
    app = Flask(__name__)
    
    # Configura√ß√µes b√°sicas
    app.config['SECRET_KEY'] = os.getenv('SECRET_KEY', 'chave-temporaria-desenvolvimento')
    app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///mentemagna.db'
    app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
    
    # Configura√ß√µes de email
    app.config['MAIL_SERVER'] = os.getenv('MAIL_SERVER', 'smtp.gmail.com')
    app.config['MAIL_PORT'] = int(os.getenv('MAIL_PORT', 587))
    app.config['MAIL_USE_TLS'] = True
    app.config['MAIL_USERNAME'] = os.getenv('MAIL_USERNAME')
    app.config['MAIL_PASSWORD'] = os.getenv('MAIL_PASSWORD')
    
    print("‚úÖ Configura√ß√µes carregadas")
    
    # Inicializar extens√µes
    from extensions import db, migrate, mail, login_manager
    
    db.init_app(app)
    migrate.init_app(app, db)
    mail.init_app(app)
    login_manager.init_app(app)
    
    # IMPORTANTE: Importar models DEPOIS de inicializar extens√µes
    from models import User, Post
    
    print("‚úÖ Extens√µes inicializadas")
    
    # Registrar rotas principais
    register_routes(app)
    
    # Criar banco de dados CORRETAMENTE
    with app.app_context():
        try:
            # Deletar banco existente se houver problema
            if os.path.exists('mentemagna.db'):
                os.remove('mentemagna.db')
                print("üóëÔ∏è Banco antigo removido")
            
            # Criar todas as tabelas
            db.create_all()
            print("‚úÖ Tabelas criadas com sucesso")
            
            # Criar usu√°rio admin
            create_admin_user(db, User)
            
        except Exception as e:
            print(f"‚ùå Erro ao criar banco: {e}")
    
    return app

def register_routes(app):
    """Registra todas as rotas da aplica√ß√£o"""
    
    @app.route('/')
    def home():
        return render_template('home.html')
    
    @app.route('/sobre')
    def sobre():
        return render_template('sobre.html')
    
    @app.route('/contato')
    def contato():
        return render_template('contato.html')
    
    @app.route('/blog')
    def blog():
        return render_template('blog.html')
    
    @app.route('/produtos')
    def produtos():
        return render_template('produtos.html')
    
    @app.route('/emagna')
    def emagna():
        return render_template('emagna.html')
    
    # Rotas de administra√ß√£o
    @app.route('/admin')
    def admin():
        return '<h1>üîß Admin em constru√ß√£o</h1><a href="/">‚Üê Voltar</a>'
    
    @app.route('/auth/login')
    def login():
        return '<h1>üîë Login em constru√ß√£o</h1><a href="/">‚Üê Voltar</a>'
    
    print("‚úÖ Rotas registradas")

def create_admin_user(db, User):
    """Cria usu√°rio admin padr√£o"""
    try:
        # Verificar se admin j√° existe
        admin = User.query.filter_by(username='admin').first()
        if not admin:
            admin = User(
                username='admin',
                email='admin@mentemagna.com'
            )
            admin.set_password('123456')
            db.session.add(admin)
            db.session.commit()
            print("‚úÖ Usu√°rio admin criado (admin/123456)")
        else:
            print("‚ÑπÔ∏è Usu√°rio admin j√° existe")
            
    except Exception as e:
        print(f"‚ö†Ô∏è Erro ao criar admin: {e}")

def show_startup_info():
    """Mostra informa√ß√µes de inicializa√ß√£o"""
    print("\n" + "=" * 60)
    print("üöÄ MENTE MAGNA - SERVIDOR FUNCIONANDO!")
    print("=" * 60)
    print("\nüåê ACESSE:")
    print("üì± Site: http://localhost:5000")
    print("üìÑ Sobre: http://localhost:5000/sobre")
    print("üìù Blog: http://localhost:5000/blog")
    print("üìû Contato: http://localhost:5000/contato")
    
    print("\nüë§ ADMIN:")
    print("   Usu√°rio: admin")
    print("   Senha: 123456")
    
    print("\nüìß EMAIL CONFIGURADO:")
    print(f"   {os.getenv('MAIL_USERNAME', 'N√£o configurado')}")
    
    print("\n‚èπÔ∏è Para parar: Ctrl+C")
    print("=" * 60)

if __name__ == '__main__':
    app = create_app()
    show_startup_info()
    
    try:
        app.run(
            debug=True,
            host='0.0.0.0',
            port=5000
        )
    except KeyboardInterrupt:
        print("\nüëã Servidor finalizado")